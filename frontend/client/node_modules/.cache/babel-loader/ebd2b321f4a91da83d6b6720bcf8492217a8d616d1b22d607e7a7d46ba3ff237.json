{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamel.yehya\\\\Desktop\\\\TradeZ\\\\frontend\\\\client\\\\src\\\\components\\\\SlideShow\\\\index.jsx\";\nimport { Slide } from 'react-slideshow-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = _ref => {\n  let {\n    slideImages\n  } = _ref;\n  console.log(\"SlideImages: \", slideImages);\n  const properties = {\n    duration: 5000,\n    transitionDuration: 500,\n    infinite: true,\n    indicators: true,\n    arrows: true\n  };\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    ...properties,\n    children: (() => {\n      let container = [];\n      {\n        slideImages !== undefined && slideImages !== null && slideImages.forEach((data, index) => {\n          console.log(\"single data is: \", data);\n          console.log(\"index is: \", index);\n          container.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-slide\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://localhost:3000\" + data[index],\n              alt: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this));\n        });\n      }\n      return container;\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["Slide","Slideshow","slideImages","console","log","properties","duration","transitionDuration","infinite","indicators","arrows","container","undefined","forEach","data","index","push"],"sources":["C:/Users/kamel.yehya/Desktop/TradeZ/frontend/client/src/components/SlideShow/index.jsx"],"sourcesContent":["import { Slide } from 'react-slideshow-image';\r\n\r\nconst Slideshow = ({slideImages}) => {\r\n\r\n    console.log(\"SlideImages: \", slideImages);\r\n    const properties = {\r\n        duration: 5000,\r\n        transitionDuration: 500,\r\n        infinite: true,\r\n        indicators: true,\r\n        arrows: true\r\n      }\r\n    return (\r\n      <Slide {...properties}>\r\n        {\r\n            (() => {\r\n                let container = [];\r\n                {\r\n                    slideImages !== undefined && slideImages !== null && slideImages.forEach((data, index) => {\r\n                    console.log(\"single data is: \", data);\r\n                    console.log(\"index is: \", index);\r\n                    container.push(\r\n                        <div className=\"each-slide\" key={index}>\r\n                            <img src={\"http://localhost:3000\" + data[index]} alt=\"Image\"/>\r\n                        </div>\r\n                    )\r\n                    })\r\n                }\r\n                return container;\r\n            })()\r\n        }\r\n      </Slide>\r\n    )\r\n};\r\n\r\nexport default Slideshow;"],"mappings":";AAAA,SAASA,KAAK,QAAQ,uBAAuB;AAAC;AAE9C,MAAMC,SAAS,GAAG,QAAmB;EAAA,IAAlB;IAACC;EAAW,CAAC;EAE5BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,WAAW,CAAC;EACzC,MAAMG,UAAU,GAAG;IACfC,QAAQ,EAAE,IAAI;IACdC,kBAAkB,EAAE,GAAG;IACvBC,QAAQ,EAAE,IAAI;IACdC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;EACV,CAAC;EACH,oBACE,QAAC,KAAK;IAAA,GAAKL,UAAU;IAAA,UAEf,CAAC,MAAM;MACH,IAAIM,SAAS,GAAG,EAAE;MAClB;QACIT,WAAW,KAAKU,SAAS,IAAIV,WAAW,KAAK,IAAI,IAAIA,WAAW,CAACW,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAC1FZ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEU,IAAI,CAAC;UACrCX,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEW,KAAK,CAAC;UAChCJ,SAAS,CAACK,IAAI,eACV;YAAK,SAAS,EAAC,YAAY;YAAA,uBACvB;cAAK,GAAG,EAAE,uBAAuB,GAAGF,IAAI,CAACC,KAAK,CAAE;cAAC,GAAG,EAAC;YAAO;cAAA;cAAA;cAAA;YAAA;UAAE,GADjCA,KAAK;YAAA;YAAA;YAAA;UAAA,QAEhC,CACT;QACD,CAAC,CAAC;MACN;MACA,OAAOJ,SAAS;IACpB,CAAC;EAAG;IAAA;IAAA;IAAA;EAAA,QAEF;AAEd,CAAC;AAAC,KA/BIV,SAAS;AAiCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}