{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamel.yehya\\\\Desktop\\\\TradeZ\\\\frontend\\\\client\\\\src\\\\pages\\\\AllItems\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Item from \"../../components/Item\";\nimport SearchBar from \"../../components/SearchBar\";\nimport ReactPaginate from 'react-paginate';\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport \"./allitems.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport ItemsList from \"components/ItemsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllItems = _ref => {\n  _s();\n  let {\n    getCookie\n  } = _ref;\n  const [items, setItems] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [orderValue, setOrderValue] = useState(null);\n  const [orderDirectionValue, setOrderDirectionValue] = useState(null);\n  const [searchTextValue, setSearchTextValue] = useState(null);\n  const navigate = useNavigate();\n  const clickEvent = id => {\n    const url = 'localhost:3001/item/' + id;\n    navigate(url);\n  };\n  const getData = controller => {\n    setIsLoading(true);\n    try {\n      const token = getCookie();\n      let reqInstance = axios.create({\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"token to be sent: \", token);\n      const url = \"http://localhost:3000/api/item\";\n      reqInstance.get(url, {\n        params: {\n          isMine: false,\n          order: orderValue,\n          orderDirection: orderDirectionValue,\n          searchText: searchTextValue\n        },\n        signal: controller.signal\n      }, {\n        withCredentials: true,\n        baseURL: 'http://localhost:3000'\n      }).then(_ref2 => {\n        let {\n          data: res\n        } = _ref2;\n        setItems(res);\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.log(\"error: \", error);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // orderValue, setOrderValue, orderDirectionValue, setOrderDirectionValue, searchTextValue, setSearchTextValue, isLoading\n    _jsxDEV(ItemsList, {\n      clickEvent: clickEvent,\n      getData: getData,\n      items: items,\n      orderValue: orderValue,\n      setOrderValue: setOrderValue,\n      orderDirectionValue: orderDirectionValue,\n      setOrderDirectionValue: setOrderDirectionValue,\n      searchTextValue: searchTextValue,\n      setSearchTextValue: setSearchTextValue,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n    // <>\n    //     <SearchBar setOrderValue={setOrderValue} setOrderDirectionValue={setOrderDirectionValue} setSearchTextValue={setSearchTextValue} />\n    //     {\n    //         isLoading === false && \n    //         <>\n    //             <div className=\"d-flex flex-wrap col-10 offset-2 justify-content-start mt-4\">\n    //                 {\n    //                     (() => {\n    //                         console.log(\"current items: \", currentItems);\n    //                         let container = [];\n    //                         {\n    //                             currentItems && currentItems.forEach((data, index) => {\n    //                             console.log(\"single data is: \", data);\n    //                             container.push(\n    //                                 <Item key={index} data={data} clickEvent={()=> {clickEvent(data._id)}}/>\n    //                             )\n    //                             })\n    //                         }\n    //                         return container;\n    //                     })()\n    //                 }\n    //             </div>\n    //         </>\n    //     }   \n    //     {\n    //         isLoading && <LoadingSpinner />\n    //     }\n    //     <div className=\"paginated-list-container\">\n    //         <ReactPaginate\n    //             breakLabel=\"...\"\n    //             nextLabel=\"next >\"\n    //             onPageChange={handlePageClick}\n    //             pageRangeDisplayed={5}\n    //             pageCount={pageCount}\n    //             previousLabel=\"< previous\"\n    //             renderOnZeroPageCount={null}\n    //             containerClassName=\"pagination\"\n    //             pageLinkClassName=\"page-num\"\n    //             previousLinkClassName=\"page-num\"\n    //             nextLinkClassName=\"page-num\"\n    //             activeLinkClassName=\"active\"\n    //         />\n    //     </div>\n    // </>\n  );\n};\n_s(AllItems, \"boQGI1KcnLV+S6+xG24Vfi5ImI0=\", false, function () {\n  return [useNavigate];\n});\n_c = AllItems;\nexport default AllItems;\nvar _c;\n$RefreshReg$(_c, \"AllItems\");","map":{"version":3,"names":["useState","useEffect","axios","Item","SearchBar","ReactPaginate","LoadingSpinner","useNavigate","ItemsList","AllItems","getCookie","items","setItems","isLoading","setIsLoading","orderValue","setOrderValue","orderDirectionValue","setOrderDirectionValue","searchTextValue","setSearchTextValue","navigate","clickEvent","id","url","getData","controller","token","reqInstance","create","headers","Authorization","console","log","get","params","isMine","order","orderDirection","searchText","signal","withCredentials","baseURL","then","data","res","error"],"sources":["C:/Users/kamel.yehya/Desktop/TradeZ/frontend/client/src/pages/AllItems/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Item from \"../../components/Item\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport \"./allitems.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ItemsList from \"components/ItemsList\";\r\n\r\nconst AllItems = ({getCookie}) => {\r\n\r\n    const [items, setItems] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [orderValue, setOrderValue ] = useState(null);\r\n    const [orderDirectionValue, setOrderDirectionValue] = useState(null);\r\n    const [searchTextValue, setSearchTextValue] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const clickEvent = (id) => {\r\n        const url = 'localhost:3001/item/' + id;\r\n        navigate(url);\r\n    };\r\n\r\n    const getData = (controller) => {\r\n        setIsLoading(true);\r\n        try {\r\n            const token = getCookie();\r\n            let reqInstance = axios.create({\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            console.log(\"token to be sent: \", token);\r\n            const url = \"http://localhost:3000/api/item\";\r\n\r\n            reqInstance.get(\r\n                url, \r\n                { \r\n                    params: { \r\n                        isMine: false,\r\n                        order: orderValue,\r\n                        orderDirection: orderDirectionValue,\r\n                        searchText: searchTextValue\r\n                    },\r\n                    signal: controller.signal\r\n                },\r\n                {\r\n                    withCredentials: true,\r\n                    baseURL: 'http://localhost:3000'\r\n                }\r\n            ).then(({data: res}) => { \r\n                setItems(res); \r\n                setIsLoading(false);\r\n            });\r\n        \r\n        } catch (error) { \r\n            console.log(\"error: \", error);\r\n        }\r\n    }\r\n\r\n\r\n\treturn (\r\n        // orderValue, setOrderValue, orderDirectionValue, setOrderDirectionValue, searchTextValue, setSearchTextValue, isLoading\r\n        <ItemsList \r\n            clickEvent={clickEvent} getData={getData} items={items} orderValue={orderValue}\r\n            setOrderValue={setOrderValue} orderDirectionValue={orderDirectionValue} setOrderDirectionValue={setOrderDirectionValue}\r\n            searchTextValue={searchTextValue} setSearchTextValue={setSearchTextValue} isLoading={isLoading}/>\r\n    // <>\r\n    //     <SearchBar setOrderValue={setOrderValue} setOrderDirectionValue={setOrderDirectionValue} setSearchTextValue={setSearchTextValue} />\r\n    //     {\r\n    //         isLoading === false && \r\n    //         <>\r\n    //             <div className=\"d-flex flex-wrap col-10 offset-2 justify-content-start mt-4\">\r\n    //                 {\r\n    //                     (() => {\r\n    //                         console.log(\"current items: \", currentItems);\r\n    //                         let container = [];\r\n    //                         {\r\n    //                             currentItems && currentItems.forEach((data, index) => {\r\n    //                             console.log(\"single data is: \", data);\r\n    //                             container.push(\r\n    //                                 <Item key={index} data={data} clickEvent={()=> {clickEvent(data._id)}}/>\r\n    //                             )\r\n    //                             })\r\n    //                         }\r\n    //                         return container;\r\n    //                     })()\r\n    //                 }\r\n    //             </div>\r\n    //         </>\r\n    //     }   \r\n    //     {\r\n    //         isLoading && <LoadingSpinner />\r\n    //     }\r\n    //     <div className=\"paginated-list-container\">\r\n    //         <ReactPaginate\r\n    //             breakLabel=\"...\"\r\n    //             nextLabel=\"next >\"\r\n    //             onPageChange={handlePageClick}\r\n    //             pageRangeDisplayed={5}\r\n    //             pageCount={pageCount}\r\n    //             previousLabel=\"< previous\"\r\n    //             renderOnZeroPageCount={null}\r\n    //             containerClassName=\"pagination\"\r\n    //             pageLinkClassName=\"page-num\"\r\n    //             previousLinkClassName=\"page-num\"\r\n    //             nextLinkClassName=\"page-num\"\r\n    //             activeLinkClassName=\"active\"\r\n    //         />\r\n    //     </div>\r\n    // </>\r\n\t);\r\n};\r\n\r\nexport default AllItems;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}