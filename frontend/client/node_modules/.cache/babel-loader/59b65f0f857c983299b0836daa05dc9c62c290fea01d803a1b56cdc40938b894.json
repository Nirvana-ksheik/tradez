{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamel.yehya\\\\Desktop\\\\TradeZ\\\\frontend\\\\client\\\\src\\\\pages\\\\EditItem\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport ItemForm from \"components/ItemForm\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditItem = _ref => {\n  _s();\n  let {\n    getCookie\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState('');\n  useEffect(() => {\n    getItemDetails();\n  }, []);\n  const getItemDetails = async () => {\n    const token = getCookie();\n    let reqInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const url = \"http://localhost:3000/api/item/\" + id;\n    await reqInstance.get(url, {\n      withCredentials: true,\n      baseURL: 'http://localhost:3000'\n    }).then(async _ref2 => {\n      let {\n        data\n      } = _ref2;\n      console.log(\"data: \", data);\n      setData(data);\n      const newFiles = [];\n      const promises = [];\n      data.imagePaths.forEach((item, i) => {\n        console.log(\"item in foreach is: \", item);\n        const fileName = item.split(\"\\\\\").pop();\n        promises.push(fetch(\"http://localhost:3000\" + item, {\n          mode: 'no-cors'\n        }).then(response => response.blob()).then(blob => {\n          URL.createObjectURL(blob);\n          // const file = new File([blob], fileName, { type: blob.type });\n          // newFiles.push(file);\n          // if (newFiles.length === data.imagePaths.length) {\n          // setSelectedFile(newFiles);\n          // }\n        }));\n\n        Promise.all(promises).then(urls => setImageUrl(urls));\n        console.log(\"files: \", newFiles);\n      });\n    });\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"_id\", data._id);\n    formData.append(\"name\", data.name);\n    formData.append(\"approximateValue\", data.approximateValue);\n    formData.append(\"locationName\", data.locationName);\n    formData.append(\"description\", data.description);\n    for (let i = 0; i < selectedFile.length; i++) {\n      formData.append('imagesReferences', selectedFile[i]);\n    }\n    const token = getCookie();\n    let reqInstance = axios.create({\n      headers: {\n        'ContentType': 'multipart/form-data',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    try {\n      const url = \"http://localhost:3000/api/item/edit/\" + id;\n      await reqInstance.put(url, formData, {\n        withCredentials: true,\n        baseURL: 'http://localhost:3000'\n      });\n      navigate(\"/items/mine\");\n    } catch (error) {\n      console.log(\"error: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: imageUrl && imageUrl.map(url => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: \"Image\"\n      }, url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 56\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), data && selectedFile && /*#__PURE__*/_jsxDEV(ItemForm, {\n      data: data,\n      setData: setData,\n      selectedFile: selectedFile,\n      setSelectedFile: setSelectedFile,\n      submitForm: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(EditItem, \"LIGa8/3pqxqaKZUqnYbJ3ASUUok=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditItem;\nexport default EditItem;\nvar _c;\n$RefreshReg$(_c, \"EditItem\");","map":{"version":3,"names":["ItemForm","useState","useEffect","axios","useNavigate","useParams","EditItem","getCookie","navigate","id","data","setData","selectedFile","setSelectedFile","imageUrl","setImageUrl","getItemDetails","token","reqInstance","create","headers","Authorization","url","get","withCredentials","baseURL","then","console","log","newFiles","promises","imagePaths","forEach","item","i","fileName","split","pop","push","fetch","mode","response","blob","URL","createObjectURL","Promise","all","urls","submitForm","e","preventDefault","formData","FormData","append","_id","name","approximateValue","locationName","description","length","put","error","map"],"sources":["C:/Users/kamel.yehya/Desktop/TradeZ/frontend/client/src/pages/EditItem/index.jsx"],"sourcesContent":["import ItemForm from \"components/ItemForm\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditItem = ({ getCookie }) => {\r\n\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState(\"\");\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(() => {   \r\n        getItemDetails();\r\n    }, []);\r\n\r\n    const getItemDetails = async () => {\r\n\r\n        const token = getCookie();\r\n\r\n        let reqInstance = axios.create({\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        const url = \"http://localhost:3000/api/item/\" + id;\r\n        await reqInstance.get(\r\n            url,\r\n            {\r\n                withCredentials: true,\r\n                baseURL: 'http://localhost:3000'\r\n            }\r\n        ).then(async ({data}) => {\r\n            console.log(\"data: \", data);\r\n            setData(data);\r\n\r\n            const newFiles = [];\r\n            const promises = [];\r\n\r\n            data.imagePaths.forEach((item, i) => {\r\n\r\n                console.log(\"item in foreach is: \", item);\r\n                const fileName = item.split(\"\\\\\").pop();\r\n\r\n                promises.push(\r\n                    fetch(\"http://localhost:3000\" + item, {mode: 'no-cors'})\r\n                        .then((response) => response.blob())\r\n                        .then((blob) => {    URL.createObjectURL(blob)\r\n                            // const file = new File([blob], fileName, { type: blob.type });\r\n                            // newFiles.push(file);\r\n                            // if (newFiles.length === data.imagePaths.length) {\r\n                            // setSelectedFile(newFiles);\r\n                            // }\r\n                        })\r\n                )\r\n                Promise.all(promises).then((urls) => setImageUrl(urls));\r\n\r\n                console.log(\"files: \", newFiles);\r\n            });\r\n    \r\n        });\r\n    };\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"_id\", data._id);\r\n        formData.append(\"name\",  data.name);\r\n        formData.append(\"approximateValue\",  data.approximateValue);\r\n        formData.append(\"locationName\",  data.locationName);\r\n        formData.append(\"description\",  data.description);\r\n\r\n        for (let i = 0; i < selectedFile.length; i++) {\r\n            formData.append('imagesReferences', selectedFile[i]);\r\n        }\r\n\r\n        const token = getCookie();\r\n\r\n        let reqInstance = axios.create({\r\n            headers: {\r\n                'ContentType': 'multipart/form-data',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n\t\ttry {\r\n\t\t\tconst url = \"http://localhost:3000/api/item/edit/\" + id;\r\n\t\t\tawait reqInstance.put(url, formData, \r\n\t\t\t\t{\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\tbaseURL: 'http://localhost:3000'\r\n\t\t\t\t});\r\n\r\n\t\t\tnavigate(\"/items/mine\");\r\n\r\n\t\t} catch (error) { \r\n\t\t\tconsole.log(\"error: \", error);\r\n\t\t}\r\n    }    \r\n\r\n\treturn (\r\n        <>\r\n        \r\n                <div>\r\n                    {imageUrl && imageUrl.map((url) => <img src={url} alt=\"Image\" key={url} />)}\r\n                </div>\r\n            {   \r\n                data && selectedFile &&\r\n                <ItemForm data={data} setData={setData} selectedFile={selectedFile} setSelectedFile={setSelectedFile} submitForm={submitForm} />\r\n            }\r\n        </>\r\n\t);\r\n};\r\n\r\nexport default EditItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}