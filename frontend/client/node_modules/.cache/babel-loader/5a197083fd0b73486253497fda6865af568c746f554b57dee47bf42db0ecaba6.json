{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamel.yehya\\\\Desktop\\\\TradeZ\\\\frontend\\\\client\\\\src\\\\pages\\\\ConfirmEmail\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingSpinner from \"components/LoadingSpinner\";\nimport { useParams } from \"react-router-dom\";\nimport Ribbon from \"components/Ribbon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmEmail = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [confirmEmailRibbon, setConfirmEmailRibbon] = useState(false);\n  const [confirmEmailText, setConfirmEmailText] = useState('');\n  const [isSuccess, setIsSuccess] = useState(false);\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const confirmEmail = async controller => {\n    setIsLoading(true);\n    try {\n      let reqInstance = axios.create({\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"token to be sent: \", token);\n      const url = \"http://localhost:3000/api/auth/confirm/\" + token;\n      await reqInstance.post(url, {\n        signal: controller.signal\n      }, {\n        withCredentials: true,\n        baseURL: 'http://localhost:3000'\n      }).then(_ref => {\n        let {\n          data: res\n        } = _ref;\n        setIsSuccess(true);\n        setIsLoading(false);\n        setConfirmEmailRibbon(true);\n        setConfirmEmailText(res);\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      }).catch(err => {\n        console.log(\"err: \", err);\n        setConfirmEmailRibbon(true);\n        setIsSuccess(false);\n      });\n    } catch (error) {\n      console.log(\"error: \", error);\n      setConfirmEmailRibbon(true);\n      setIsSuccess(false);\n    }\n  };\n  useEffect(() => {\n    confirmEmail();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-10 offset-1 mt-5 d-flex justify-content-center align-items-center\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), confirmEmailRibbon && /*#__PURE__*/_jsxDEV(Ribbon, {\n      text: confirmEmailText,\n      setShowValue: setConfirmEmailRibbon,\n      isSuccess: isSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmEmail, \"Ghb7BQatxz3kPct9dgqlhAN76bY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ConfirmEmail;\nexport default ConfirmEmail;\nvar _c;\n$RefreshReg$(_c, \"ConfirmEmail\");","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","LoadingSpinner","useParams","Ribbon","jsxDEV","_jsxDEV","ConfirmEmail","_s","isLoading","setIsLoading","confirmEmailRibbon","setConfirmEmailRibbon","confirmEmailText","setConfirmEmailText","isSuccess","setIsSuccess","navigate","token","confirmEmail","controller","reqInstance","create","headers","Authorization","console","log","url","post","signal","withCredentials","baseURL","then","_ref","data","res","setTimeout","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","setShowValue","_c","$RefreshReg$"],"sources":["C:/Users/kamel.yehya/Desktop/TradeZ/frontend/client/src/pages/ConfirmEmail/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingSpinner from \"components/LoadingSpinner\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Ribbon from \"components/Ribbon\";\r\n\r\nconst ConfirmEmail = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [confirmEmailRibbon, setConfirmEmailRibbon] = useState(false);\r\n    const [confirmEmailText, setConfirmEmailText] = useState('');\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const {token} = useParams();\r\n\r\n    const confirmEmail = async(controller) => {\r\n        setIsLoading(true);\r\n        try {\r\n            let reqInstance = axios.create({\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            console.log(\"token to be sent: \", token);\r\n            const url = \"http://localhost:3000/api/auth/confirm/\" + token;\r\n\r\n            await reqInstance.post(\r\n                url, \r\n                { \r\n                    signal: controller.signal\r\n                },\r\n                {\r\n                    withCredentials: true,\r\n                    baseURL: 'http://localhost:3000'\r\n                }\r\n            ).then(({data: res}) => { \r\n                setIsSuccess(true);\r\n                setIsLoading(false);\r\n                setConfirmEmailRibbon(true);\r\n                setConfirmEmailText(res);\r\n                setTimeout(()=>{\r\n                    navigate('/login');\r\n                }, 3000);\r\n            }).catch(err => {\r\n                console.log(\"err: \", err);\r\n                setConfirmEmailRibbon(true);\r\n                setIsSuccess(false);\r\n            })\r\n        \r\n        } catch (error) { \r\n            console.log(\"error: \", error);\r\n            setConfirmEmailRibbon(true);\r\n            setIsSuccess(false);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        confirmEmail();\r\n    }, []);\r\n\r\n\treturn (\r\n    <div className=\"col-10 offset-1 mt-5 d-flex justify-content-center align-items-center\">\r\n        {\r\n            isLoading &&\r\n            <LoadingSpinner />\r\n        }\r\n        {\r\n            confirmEmailRibbon &&\r\n            <Ribbon text={confirmEmailText} setShowValue={setConfirmEmailRibbon} isSuccess={isSuccess}/>\r\n        }\r\n    </div>\r\n\t);\r\n};\r\n\r\nexport default ConfirmEmail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}