{"ast":null,"code":"import * as React from 'react';\nimport Cookies from 'js-cookie';\nimport { useLocation, Navigate } from 'react-router-dom';\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Auth Context\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar AuthContext = React.createContext(null);\nvar AuthContextConsumer = AuthContext.Consumer;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\n/**\r\n * @class TokenObject\r\n *\r\n * Stores and retrieve Token\r\n */\nvar TokenObject = /** @class */function () {\n  /**\r\n   * TokenObject - Stores, retrieve and process tokens\r\n   *\r\n   * @param authStorageName - Name of the Token,\r\n   * which will store the Authorization Token\r\n   *\r\n   * @param authStorageType - Type of the auth Storage, `\r\n   * cookie` or `localstorage`\r\n   *\r\n   * @param refreshTokenName - Name of the refresh Token,\r\n   * if `undefined`, then no refreshToken feature is using\r\n   *\r\n   * @param cookieDomain - domain name for the Cookies,\r\n   * only applicable when `authStorageType` is `cookie`\r\n   *\r\n   * @param cookieSecure - cookies are secure or not,\r\n   * only applicable when `authStorageType` is `cookie`\r\n   *\r\n   * @constructor\r\n   */\n  function TokenObject(authStorageName, authStorageType, refreshTokenName, cookieDomain, cookieSecure) {\n    this.authStorageType = authStorageType;\n    this.authStorageName = authStorageName;\n    this.authTimeStorageName = \"\".concat(authStorageName, \"_storage\");\n    this.stateStorageName = \"\".concat(authStorageName, \"_state\");\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.authStorageTypeName = \"\".concat(this.authStorageName, \"_type\");\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.refreshTokenTimeName = this.refreshTokenName ? \"\".concat(this.refreshTokenName, \"_time\") : null;\n  }\n  /**\r\n   * Get the Initial Tokens and states\r\n   * Called externally in `AuthProvider`\r\n   * when the Application is bootstrapping or refreshed\r\n   *\r\n   * If the `authStorageType` is `cookie`,\r\n   * get information from `initialCookieToken()` function\r\n   *\r\n   * If the `authTokenType` is `localStorage`\r\n   * get information from `initialLSToken()` function\r\n   *\r\n   * @returns AuthKitStateInterface\r\n   */\n  TokenObject.prototype.initialToken = function () {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  };\n  /**\r\n   * Get the Initial Token from Cookies\r\n   * Called internally by `initialToken` method\r\n   *\r\n   * If the `authStorageType` is `cookie`\r\n   * then this function is called\r\n   * And returns the Tokens and states Stored in all 4 cookies\r\n   *\r\n   * @returns AuthKitStateInterface\r\n   */\n  TokenObject.prototype.initialCookieToken_ = function () {\n    var authToken = Cookies.get(this.authStorageName);\n    var authTokenType = Cookies.get(this.authStorageTypeName);\n    var authTokenTime = Cookies.get(this.authTimeStorageName);\n    var stateCookie = Cookies.get(this.stateStorageName);\n    var refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? Cookies.get(this.refreshTokenName) : null;\n    var refreshTokenTime = this.isUsingRefreshToken && this.refreshTokenTimeName != null ? Cookies.get(this.refreshTokenTimeName) : null;\n    return this.checkTokenExist(authToken, authTokenType, authTokenTime, stateCookie, refreshToken, refreshTokenTime);\n  };\n  /**\r\n   * Get the Initial Token from LocalStorage\r\n   * Called internally by `initialToken` method\r\n   *\r\n   * If the `authStorageType` is `localstorage`\r\n   * then this function is called\r\n   * And returns the Tokens and states Stored in all 4 cookies\r\n   *\r\n   * @returns AuthKitStateInterface\r\n   */\n  TokenObject.prototype.initialLSToken_ = function () {\n    var authToken = localStorage.getItem(this.authStorageName);\n    var authTokenType = localStorage.getItem(this.authStorageTypeName);\n    var authTokenTime = localStorage.getItem(this.authTimeStorageName);\n    var stateCookie = localStorage.getItem(this.stateStorageName);\n    var refreshToken = this.isUsingRefreshToken && this.refreshTokenName != null ? localStorage.getItem(this.refreshTokenName) : null;\n    var refreshTokenTime = this.isUsingRefreshToken && this.refreshTokenTimeName != null ? localStorage.getItem(this.refreshTokenTimeName) : null;\n    return this.checkTokenExist(authToken, authTokenType, authTokenTime, stateCookie, refreshToken, refreshTokenTime);\n  };\n  /**\r\n   * Check if the Initial token is valid or not,\r\n   * Called Internally by `initialCookieToken_()` and `initialLSToken_()`\r\n   *\r\n   * If the tokens are valid,\r\n   * then it response TokenObject with auth Information\r\n   * Else it response TokenObject with all null\r\n   *\r\n   * @param authToken\r\n   * @param authTokenType\r\n   * @param authTokenTime\r\n   * @param stateCookie\r\n   * @param refreshToken\r\n   * @param refreshTokenTime\r\n   *\r\n   * @returns AuthKitStateInterface\r\n   *\r\n   */\n  TokenObject.prototype.checkTokenExist = function (authToken, authTokenType, authTokenTime, stateCookie, refreshToken, refreshTokenTime) {\n    if (!!authToken && !!authTokenType && !!authTokenTime && !!stateCookie) {\n      var expiresAt = new Date(authTokenTime);\n      try {\n        var authState = JSON.parse(stateCookie);\n        var obj = {\n          auth: {\n            token: authToken,\n            type: authTokenType,\n            expiresAt: expiresAt\n          },\n          userState: authState,\n          isSignIn: true,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          refresh: undefined\n        };\n        if (this.isUsingRefreshToken && !!refreshToken && !!refreshTokenTime) {\n          var refreshTokenExpiresAt = new Date(refreshTokenTime);\n          return __assign(__assign({}, obj), {\n            refresh: {\n              token: refreshToken,\n              expiresAt: refreshTokenExpiresAt\n            }\n          });\n        } else {\n          return __assign(__assign({}, obj), {\n            refresh: null\n          });\n        }\n      } catch (e) {\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false\n        };\n      }\n    } else {\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false\n      };\n    }\n  };\n  /**\r\n   * Sync Auth Tokens on time of login and logout\r\n   *\r\n   * Set the New Cookies or new Localstorage on login\r\n   * Or Remove the old Cookies or old Localstorage on logout\r\n   *\r\n   * @param authState\r\n   */\n  TokenObject.prototype.syncTokens = function (authState) {\n    if (authState.auth) {\n      if (this.isUsingRefreshToken && authState.refresh) {\n        this.setToken(authState.auth.token, authState.auth.type, authState.refresh.token, authState.refresh.expiresAt, authState.auth.expiresAt, authState.userState);\n      } else {\n        this.setToken(authState.auth.token, authState.auth.type, null, null, authState.auth.expiresAt, authState.userState);\n      }\n    } else {\n      this.removeToken();\n    }\n  };\n  /**\r\n   * Set Cookies or localstorage on login\r\n   *\r\n   * @param authToken\r\n   * @param authTokenType\r\n   * @param refreshToken\r\n   * @param refreshTokenExpiresAt\r\n   * @param expiresAt\r\n   * @param authState\r\n   */\n  TokenObject.prototype.setToken = function (authToken, authTokenType, refreshToken, refreshTokenExpiresAt, expiresAt, authState) {\n    if (this.authStorageType === 'cookie') {\n      this.setCookieToken_(authToken, authTokenType, refreshToken, expiresAt, refreshTokenExpiresAt, authState);\n    } else {\n      this.setLSToken_(authToken, authTokenType, refreshToken, expiresAt, refreshTokenExpiresAt, authState);\n    }\n  };\n  /**\r\n   *\r\n   * Set Cookie on time of Login\r\n   *\r\n   * @param authToken\r\n   * @param authTokenType\r\n   * @param refreshToken\r\n   * @param expiresAt\r\n   * @param refreshTokenExpiresAt\r\n   * @param authState\r\n   */\n  TokenObject.prototype.setCookieToken_ = function (authToken, authTokenType, refreshToken, expiresAt, refreshTokenExpiresAt, authState) {\n    Cookies.set(this.authStorageName, authToken, {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    Cookies.set(this.authStorageTypeName, authTokenType, {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    Cookies.set(this.authTimeStorageName, expiresAt.toISOString(), {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    if (authState) {\n      Cookies.set(this.stateStorageName, JSON.stringify(authState), {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n      Cookies.set(this.refreshTokenName, refreshToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName && !!refreshTokenExpiresAt) {\n      Cookies.set(this.refreshTokenTimeName, refreshTokenExpiresAt.toISOString(), {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  /**\r\n   * Set LocalStorage at the time of Login\r\n   *\r\n   * @param authToken\r\n   * @param authTokenType\r\n   * @param refreshToken\r\n   * @param expiresAt\r\n   * @param refreshTokenExpiresAt\r\n   * @param authState\r\n   */\n  TokenObject.prototype.setLSToken_ = function (authToken, authTokenType, refreshToken, expiresAt, refreshTokenExpiresAt, authState) {\n    localStorage.setItem(this.authStorageName, authToken);\n    localStorage.setItem(this.authStorageTypeName, authTokenType);\n    localStorage.setItem(this.authTimeStorageName, expiresAt.toISOString());\n    if (authState) {\n      localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenName && !!refreshToken) {\n      localStorage.setItem(this.refreshTokenName, refreshToken);\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName && !!refreshTokenExpiresAt) {\n      localStorage.setItem(this.refreshTokenTimeName, refreshTokenExpiresAt.toISOString());\n    }\n  };\n  /**\r\n   * Remove Tokens on time of Logout\r\n   */\n  TokenObject.prototype.removeToken = function () {\n    if (this.authStorageType === 'cookie') {\n      this.removeCookieToken_();\n    } else {\n      this.removeLSToken_();\n    }\n  };\n  /**\r\n   * Remove Token from Cookies\r\n   */\n  TokenObject.prototype.removeCookieToken_ = function () {\n    Cookies.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    Cookies.remove(this.authTimeStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    Cookies.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    Cookies.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      Cookies.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName) {\n      Cookies.remove(this.refreshTokenTimeName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure\n      });\n    }\n  };\n  /**\r\n   * Remove Token from LocalStorage\r\n   */\n  TokenObject.prototype.removeLSToken_ = function () {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authTimeStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName) {\n      localStorage.removeItem(this.refreshTokenTimeName);\n    }\n  };\n  return TokenObject;\n}();\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Actions for useReducer\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ActionType;\n(function (ActionType) {\n  ActionType[ActionType[\"SignIn\"] = 0] = \"SignIn\";\n  ActionType[ActionType[\"SignOut\"] = 1] = \"SignOut\";\n  ActionType[ActionType[\"RefreshToken\"] = 2] = \"RefreshToken\";\n})(ActionType || (ActionType = {}));\n\n/**\r\n * Auth Reducer\r\n * Used in auth state\r\n * @param state\r\n * @param action\r\n */\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case ActionType.SignIn:\n      return __assign(__assign({}, state), {\n        auth: action.payload.auth,\n        refresh: action.payload.refresh,\n        userState: action.payload.userState,\n        isSignIn: true\n      });\n    case ActionType.SignOut:\n      return __assign(__assign({}, state), {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isSignIn: false\n      });\n    case ActionType.RefreshToken:\n      if (state.isSignIn && state.auth && state.refresh) {\n        return __assign(__assign({}, state), {\n          auth: {\n            token: action.payload.newAuthToken ? action.payload.newAuthToken : state.auth.token,\n            type: state.auth.type,\n            expiresAt: action.payload.newAuthTokenExpireIn ? new Date(new Date().getTime() + action.payload.newAuthTokenExpireIn * 60 * 1000) : state.auth.expiresAt\n          },\n          refresh: {\n            token: action.payload.newRefreshToken ? action.payload.newRefreshToken : state.refresh.token,\n            expiresAt: action.payload.newRefreshTokenExpiresIn ? new Date(new Date().getTime() + action.payload.newRefreshTokenExpiresIn * 60 * 1000) : state.refresh.expiresAt\n          },\n          userState: action.payload.newAuthUserState ? action.payload.newAuthUserState : state.userState\n        });\n      } else {\n        return state;\n      }\n  }\n}\n// Helper functions\n/**\r\n * used to make sign in\r\n * @param signInParams\r\n */\nfunction doSignIn(signInParams) {\n  return {\n    type: ActionType.SignIn,\n    payload: signInParams\n  };\n}\n/**\r\n * used to refresh the Token\r\n * @param refreshTokenParam\r\n */\nfunction doRefresh(refreshTokenParam) {\n  return {\n    type: ActionType.RefreshToken,\n    payload: refreshTokenParam\n  };\n}\n/**\r\n * Used to make sign out\r\n */\nfunction doSignOut() {\n  return {\n    type: ActionType.SignOut\n  };\n}\n\n/*\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * React useInterval Hook\r\n * Used to integrate the power of setInterval seamlessly\r\n *\r\n * @param callback - The callback function\r\n * @param delay - The amount of delay in minutes.\r\n *\r\n * @returns the ref of setInterval\r\n */\nfunction useInterval(callback, delay) {\n  var savedCallback = React.useRef(callback);\n  var intervalRef = React.useRef(null);\n  // Remember the latest callback if it changes.\n  React.useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  // Set up the interval.\n  React.useEffect(function () {\n    var tick = function () {\n      return savedCallback.current();\n    };\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(tick, delay * 60 * 1000);\n    }\n    return function () {\n      if (intervalRef.current) {\n        window.clearTimeout(intervalRef.current);\n      }\n    };\n  }, [delay]);\n  return intervalRef;\n}\n\n/**\r\n * AuthProvider - The Authentication Context Provider\r\n *\r\n * @param children\r\n * @param authStorageName\r\n * @param cookieDomain\r\n * @param cookieSecure\r\n *\r\n * @return Functional Component\r\n */\nvar AuthProvider = function (_a) {\n  var children = _a.children,\n    authType = _a.authType,\n    authName = _a.authName,\n    cookieDomain = _a.cookieDomain,\n    cookieSecure = _a.cookieSecure,\n    refresh = _a.refresh;\n  if (authType === 'cookie') {\n    if (!cookieDomain) {\n      throw new Error('authType \\'cookie\\' ' + 'requires \\'cookieDomain\\' and \\'cookieSecure\\' ' + 'props in AuthProvider');\n    }\n  }\n  var refreshTokenName = refresh ? \"\".concat(authName, \"_refresh\") : null;\n  var tokenObject = new TokenObject(authName, authType, refreshTokenName, cookieDomain, cookieSecure);\n  var _b = React.useReducer(authReducer, tokenObject.initialToken()),\n    authState = _b[0],\n    dispatch = _b[1];\n  if (refresh) {\n    useInterval(function () {\n      var _a, _b, _c, _d;\n      refresh.refreshApiCallback({\n        authToken: (_a = authState.auth) === null || _a === void 0 ? void 0 : _a.token,\n        authTokenExpireAt: (_b = authState.auth) === null || _b === void 0 ? void 0 : _b.expiresAt,\n        authUserState: authState.userState,\n        refreshToken: (_c = authState.refresh) === null || _c === void 0 ? void 0 : _c.token,\n        refreshTokenExpiresAt: (_d = authState.refresh) === null || _d === void 0 ? void 0 : _d.expiresAt\n      }).then(function (result) {\n        // IF the API call is successful then refresh the AUTH state\n        if (result.isSuccess) {\n          // store the new value using the state update\n          dispatch(doRefresh(result));\n        }\n      });\n    }, authState.isSignIn ? refresh.interval : null);\n  }\n  React.useEffect(function () {\n    tokenObject.syncTokens(authState);\n  }, [authState]);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      authState: authState,\n      dispatch: dispatch\n    }\n  }, children);\n};\n\n/*\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * This function doesn't really \"do anything\" at runtime,\r\n * it's just help to organize the code base\r\n * Use this function to create the refresh token system\r\n */\nfunction createRefresh(param) {\n  return param;\n}\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview PrivateRoute component\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar RequireAuth = function (_a) {\n  var children = _a.children,\n    loginPath = _a.loginPath;\n  var context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n  }\n  var isAuth = function () {\n    if (context.authState.auth && new Date(context.authState.auth.expiresAt) > new Date()) {\n      return true;\n    } else {\n      context.dispatch(doSignOut());\n      return false;\n    }\n  };\n  var location = useLocation();\n  if (!isAuth()) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return React.createElement(Navigate, {\n      to: loginPath,\n      state: {\n        from: location\n      },\n      replace: true\n    });\n  }\n  return children;\n};\n\n/**\r\n *@author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n *@fileoverview Sign In functionality <hook>\r\n *@copyright Arkadip Bhattacharya 2020\r\n *@license Apache-2.0\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n *@function\r\n *@name useSignIn\r\n *@description Authentication SignIn Hook\r\n *@returns - Sign In function\r\n */\nfunction useSignIn() {\n  var context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n  }\n  return function (signInConfig) {\n    var token = signInConfig.token,\n      tokenType = signInConfig.tokenType,\n      authState = signInConfig.authState,\n      expiresIn = signInConfig.expiresIn,\n      refreshToken = signInConfig.refreshToken,\n      refreshTokenExpireIn = signInConfig.refreshTokenExpireIn;\n    var expTime = new Date(new Date().getTime() + expiresIn * 60 * 1000);\n    if (context.authState.isUsingRefreshToken) {\n      // Using the power of refresh token\n      if (!!refreshToken && !!refreshTokenExpireIn) {\n        // refresh token params are provided\n        // sign in with refresh token\n        var refreshTokenExpireAt = new Date(new Date().getTime() + refreshTokenExpireIn * 60 * 1000);\n        context.dispatch(doSignIn({\n          auth: {\n            token: token,\n            type: tokenType,\n            expiresAt: expTime\n          },\n          userState: authState ? authState : null,\n          refresh: {\n            token: refreshToken,\n            expiresAt: refreshTokenExpireAt\n          }\n        }));\n        return true;\n      } else {\n        // refresh token params are not provided\n        // throw an error\n        throw new Error('Make sure you given \"refreshToken\" and  ' + '\"refreshTokenExpireIn\" parameter');\n      }\n    } else {\n      // Not using refresh token\n      if (!!refreshToken && !!refreshTokenExpireIn) {\n        // params are not expected but provided\n        // throw an error\n        throw new Error('The app doesn\\'t implement \\'refreshToken\\' ' + 'feature.\\nSo you have to implement refresh token feature ' + 'from \\'AuthProvider\\' before using it.');\n      } else {\n        // sign in without the refresh token\n        context.dispatch(doSignIn({\n          auth: {\n            token: token,\n            type: tokenType,\n            expiresAt: expTime\n          },\n          userState: authState ? authState : null,\n          refresh: null\n        }));\n        return true;\n      }\n    }\n  };\n}\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Sign Out functionality <Hook>\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n  *@public\r\n  *@function\r\n  *@name useSignOut\r\n  *@description Sign out Hook\r\n  */\nfunction useSignOut() {\n  /**\r\n   *A constant c.\r\n   *@kind constant\r\n   */\n  var context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n  }\n  return function () {\n    try {\n      if (context) {\n        context.dispatch(doSignOut());\n        return true;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n}\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Authentication User <hook>\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Auth State Hook\r\n *\r\n * @returns - Auth State Function\r\n */\nfunction useAuthUser() {\n  var context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n  }\n  return function () {\n    return context.authState.auth ? context.authState.userState : null;\n  };\n}\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Authentication header <hook>\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n *\r\n */\nfunction useAuthHeader() {\n  var c = React.useContext(AuthContext);\n  if (c === null) {\n    throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n  }\n  return function () {\n    if (c.authState.auth) {\n      return \"\".concat(c.authState.auth.type, \" \").concat(c.authState.auth.token);\n    } else {\n      return \"\";\n    }\n  };\n}\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Authentication status <hook>\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n  *@function\r\n  *@name useIsAuthenticated\r\n  *@description check weather user is authenticated or not\r\n  */\nfunction useIsAuthenticated() {\n  var context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n  }\n  return function () {\n    if (context.authState.auth) {\n      if (new Date(context.authState.auth.expiresAt) > new Date()) {\n        return true;\n      } else {\n        context.dispatch(doSignOut());\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\n/**\r\n * @public\r\n * @function\r\n * @name withSignIn\r\n * @description Inject sign in functionality inside the Component's Prop\r\n * @param Component\r\n */\nfunction withSignIn(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (c) {\n      if (c === null) {\n        throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      var signIn = function (signInConfig) {\n        var token = signInConfig.token,\n          tokenType = signInConfig.tokenType,\n          authState = signInConfig.authState,\n          expiresIn = signInConfig.expiresIn,\n          refreshToken = signInConfig.refreshToken,\n          refreshTokenExpireIn = signInConfig.refreshTokenExpireIn;\n        var expTime = new Date(new Date().getTime() + expiresIn * 60 * 1000);\n        if (c.authState.isUsingRefreshToken) {\n          // Using the power of refresh token\n          if (!!refreshToken && !!refreshTokenExpireIn) {\n            // refresh token params are provided\n            // sign in with refresh token\n            var refreshTokenExpireAt = new Date(new Date().getTime() + refreshTokenExpireIn * 60 * 1000);\n            c.dispatch(doSignIn({\n              auth: {\n                token: token,\n                type: tokenType,\n                expiresAt: expTime\n              },\n              userState: authState ? authState : null,\n              refresh: {\n                token: refreshToken,\n                expiresAt: refreshTokenExpireAt\n              }\n            }));\n            return true;\n          } else {\n            // refresh token params are not provided\n            // throw an error\n            throw new Error('Make sure you given \"refreshToken\" and  ' + '\"refreshTokenExpireIn\" parameter');\n          }\n        } else {\n          // Not using refresh token\n          if (!!refreshToken && !!refreshTokenExpireIn) {\n            // params are not expected but provided\n            // throw an error\n            throw new Error('The app doesn\\'t implement \\'refreshToken\\'' + ' feature.\\n So you have to implement refresh token feature' + ' from \\'AuthProvider\\' before using it.');\n          } else {\n            // sign in without the refresh token\n            c.dispatch(doSignIn({\n              auth: {\n                token: token,\n                type: tokenType,\n                expiresAt: expTime\n              },\n              userState: authState ? authState : null,\n              refresh: null\n            }));\n            return true;\n          }\n        }\n      };\n      return React.createElement(Component, __assign({}, props, {\n        signIn: signIn\n      }));\n    });\n  };\n}\n\n/**\r\n * @public\r\n * @function\r\n * @name withSignOut\r\n * @description Inject sign Out functionality inside the Component's Prop\r\n * @param Component\r\n */\nfunction withSignOut(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (c) {\n      if (c === null) {\n        throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      var signOut = function () {\n        try {\n          if (c) {\n            c.dispatch(doSignOut());\n            return true;\n          } else {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n      };\n      return React.createElement(Component, __assign({}, props, {\n        signOut: signOut\n      }));\n    });\n  };\n}\n\n/**\r\n * @function\r\n * @name withAuthUser\r\n * @description Inject Authenticated User's state inside the Component's Prop\r\n * @param Component\r\n */\nfunction withAuthUser(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (context) {\n      if (context === null) {\n        throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      if (context.authState.auth) {\n        return React.createElement(Component, __assign({}, props, {\n          authState: context.authState.userState\n        }));\n      } else {\n        return React.createElement(Component, __assign({}, props, {\n          authState: null\n        }));\n      }\n    });\n  };\n}\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Authentication header <Higher Order Component>\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @public\r\n * @function\r\n * @name withAuthHeader\r\n * @description Inject Authentication Header inside the Component's Prop\r\n * @param Component - React Component\r\n */\nfunction withAuthHeader(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (c) {\n      if (c === null) {\n        throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      if (c.authState.auth) {\n        return React.createElement(Component, __assign({}, props, {\n          authHeader: \"\".concat(c.authState.auth.type, \" \").concat(c.authState.auth.token)\n        }));\n      } else {\n        return React.createElement(Component, __assign({}, props, {\n          authHeader: \"\"\n        }));\n      }\n    });\n  };\n}\n\n/**\r\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\r\n * @fileoverview Authentication status <Higher Order Component>\r\n * @copyright Arkadip Bhattacharya 2020\r\n *\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @public\r\n * @function\r\n * @name withIsAuthenticated\r\n * @description Inject Authentication status inside the Component's Prop\r\n * @param Component\r\n */\nfunction withIsAuthenticated(Component) {\n  return function (props) {\n    return React.createElement(AuthContextConsumer, null, function (c) {\n      if (c === null) {\n        throw new Error('Auth Provider is missing. ' + 'Please add the AuthProvider before Router');\n      }\n      if (c.authState.auth) {\n        if (new Date(c.authState.auth.expiresAt) > new Date()) {\n          return React.createElement(Component, __assign({}, props, {\n            isAuth: true\n          }));\n        } else {\n          c.dispatch(doSignOut());\n          return React.createElement(Component, __assign({}, props, {\n            isAuth: false\n          }));\n        }\n      } else {\n        return React.createElement(Component, __assign({}, props, {\n          isAuth: false\n        }));\n      }\n    });\n  };\n}\n\n/*\r\n * Copyright 2020 Arkadip Bhattacharya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *         http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * last updated 25th August 2021\r\n */\n// Default prop for AuthProvider\nAuthProvider.defaultProps = {\n  cookieDomain: window.location.hostname,\n  cookieSecure: window.location.protocol === 'https:'\n};\nexport { AuthProvider, RequireAuth, createRefresh, useAuthHeader, useAuthUser, useIsAuthenticated, useSignIn, useSignOut, withAuthHeader, withAuthUser, withIsAuthenticated, withSignIn, withSignOut };","map":{"version":3,"mappings":"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","names":["AuthContext","React","createContext","AuthContextConsumer","Consumer","TokenObject","authStorageType","refreshTokenName","cookieDomain","cookieSecure","authStorageName","authTimeStorageName","stateStorageName","authStorageTypeName","isUsingRefreshToken","refreshTokenTimeName","initialCookieToken_","initialLSToken_","authToken","Cookies","get","authTokenType","authTokenTime","stateCookie","refreshToken","refreshTokenTime","checkTokenExist","localStorage","getItem","expiresAt","Date","authState","JSON","parse","obj","auth","token","type","userState","isSignIn","refresh","undefined","refreshTokenExpiresAt","__assign","e","setToken","removeToken","setCookieToken_","setLSToken_","set","expires","domain","secure","toISOString","stringify","setItem","removeCookieToken_","removeLSToken_","remove","removeItem","ActionType","state","action","SignIn","payload","SignOut","RefreshToken","newAuthToken","newAuthTokenExpireIn","getTime","newRefreshToken","newRefreshTokenExpiresIn","newAuthUserState","doSignIn","signInParams","doRefresh","refreshTokenParam","doSignOut","useInterval","callback","delay","savedCallback","useRef","intervalRef","useEffect","current","tick","window","setInterval","clearTimeout","_a","authType","authName","Error","tokenObject","useReducer","authReducer","initialToken","dispatch","refreshApiCallback","authTokenExpireAt","authUserState","then","result","isSuccess","interval","syncTokens","Provider","value","children","createRefresh","param","loginPath","context","useContext","isAuth","location","useLocation","Navigate","to","from","replace","useSignIn","signInConfig","tokenType","expiresIn","refreshTokenExpireIn","expTime","refreshTokenExpireAt","useSignOut","useAuthUser","useAuthHeader","c","useIsAuthenticated","withSignIn","Component","props","signIn","withSignOut","signOut","withAuthUser","withAuthHeader","authHeader","withIsAuthenticated","AuthProvider","defaultProps","hostname","protocol"],"sources":["C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\AuthContext.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\TokenObject.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\utils\\actions.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\utils\\reducers.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\utils\\hooks.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\AuthProvider.tsx","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\createRefresh.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\PrivateRoute.tsx","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\hooks\\useSignIn.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\hooks\\useSignOut.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\hooks\\useAuthUser.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\hooks\\useAuthHeader.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\hooks\\useIsAuthenticated.ts","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\higherOrderComponents\\withSignIn.tsx","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\higherOrderComponents\\withSignOut.tsx","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\higherOrderComponents\\withAuthUser.tsx","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\higherOrderComponents\\withAuthHeader.tsx","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\higherOrderComponents\\withIsAuthenticated.tsx","C:\\Users\\kamel.yehya\\Desktop\\TradeZ\\frontend\\client\\node_modules\\react-auth-kit\\src\\index.tsx"],"sourcesContent":["/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Auth Context\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextInterface} from './types';\n\nconst AuthContext = React.createContext<AuthContextInterface | null>(null);\n\nconst AuthContextConsumer = AuthContext.Consumer;\nexport {AuthContextConsumer};\nexport default AuthContext;\n","import Cookies from 'js-cookie';\nimport {AuthKitStateInterface, AuthStateUserObject} from './types';\n\n/**\n * @class TokenObject\n *\n * Stores and retrieve Token\n */\nclass TokenObject {\n  private readonly authStorageName: string;\n  private readonly stateStorageName: string;\n  private readonly authTimeStorageName: string;\n  private readonly cookieDomain?: string;\n  private readonly cookieSecure?: boolean;\n  private readonly authStorageTypeName: string;\n  private readonly authStorageType: 'cookie' | 'localstorage';\n  private readonly refreshTokenName: string | null;\n  private readonly refreshTokenTimeName: string | null;\n  private readonly isUsingRefreshToken: boolean;\n\n  /**\n   * TokenObject - Stores, retrieve and process tokens\n   *\n   * @param authStorageName - Name of the Token,\n   * which will store the Authorization Token\n   *\n   * @param authStorageType - Type of the auth Storage, `\n   * cookie` or `localstorage`\n   *\n   * @param refreshTokenName - Name of the refresh Token,\n   * if `undefined`, then no refreshToken feature is using\n   *\n   * @param cookieDomain - domain name for the Cookies,\n   * only applicable when `authStorageType` is `cookie`\n   *\n   * @param cookieSecure - cookies are secure or not,\n   * only applicable when `authStorageType` is `cookie`\n   *\n   * @constructor\n   */\n  constructor(\n      authStorageName:string,\n      authStorageType:'cookie' | 'localstorage',\n      refreshTokenName:string | null,\n      cookieDomain?:string,\n      cookieSecure?:boolean,\n  ) {\n    this.authStorageType = authStorageType;\n    this.authStorageName = authStorageName;\n    this.authTimeStorageName = `${authStorageName}_storage`;\n    this.stateStorageName = `${authStorageName}_state`;\n    this.refreshTokenName = refreshTokenName;\n    this.cookieDomain = cookieDomain;\n    this.cookieSecure = cookieSecure;\n    this.authStorageTypeName = `${this.authStorageName}_type`;\n    this.isUsingRefreshToken = !!this.refreshTokenName;\n    this.refreshTokenTimeName = this.refreshTokenName ?\n      `${this.refreshTokenName}_time` : null;\n  }\n\n  /**\n   * Get the Initial Tokens and states\n   * Called externally in `AuthProvider`\n   * when the Application is bootstrapping or refreshed\n   *\n   * If the `authStorageType` is `cookie`,\n   * get information from `initialCookieToken()` function\n   *\n   * If the `authTokenType` is `localStorage`\n   * get information from `initialLSToken()` function\n   *\n   * @returns AuthKitStateInterface\n   */\n  initialToken(): AuthKitStateInterface {\n    if (this.authStorageType === 'cookie') {\n      return this.initialCookieToken_();\n    } else {\n      return this.initialLSToken_();\n    }\n  }\n\n  /**\n   * Get the Initial Token from Cookies\n   * Called internally by `initialToken` method\n   *\n   * If the `authStorageType` is `cookie`\n   * then this function is called\n   * And returns the Tokens and states Stored in all 4 cookies\n   *\n   * @returns AuthKitStateInterface\n   */\n  initialCookieToken_(): AuthKitStateInterface {\n    const authToken = Cookies.get(this.authStorageName);\n    const authTokenType = Cookies.get(this.authStorageTypeName);\n    const authTokenTime = Cookies.get(this.authTimeStorageName);\n    const stateCookie = Cookies.get(this.stateStorageName);\n\n    const refreshToken = this.isUsingRefreshToken &&\n    this.refreshTokenName != null ? Cookies.get(this.refreshTokenName) : null;\n\n    const refreshTokenTime = this.isUsingRefreshToken &&\n    this.refreshTokenTimeName != null ?\n      Cookies.get(this.refreshTokenTimeName) : null;\n\n    return this.checkTokenExist(\n        authToken,\n        authTokenType,\n        authTokenTime,\n        stateCookie,\n        refreshToken,\n        refreshTokenTime);\n  }\n\n  /**\n   * Get the Initial Token from LocalStorage\n   * Called internally by `initialToken` method\n   *\n   * If the `authStorageType` is `localstorage`\n   * then this function is called\n   * And returns the Tokens and states Stored in all 4 cookies\n   *\n   * @returns AuthKitStateInterface\n   */\n  initialLSToken_(): AuthKitStateInterface {\n    const authToken = localStorage.getItem(this.authStorageName);\n    const authTokenType = localStorage.getItem(this.authStorageTypeName);\n    const authTokenTime = localStorage.getItem(this.authTimeStorageName);\n    const stateCookie = localStorage.getItem(this.stateStorageName);\n\n    const refreshToken = this.isUsingRefreshToken &&\n    this.refreshTokenName != null ?\n      localStorage.getItem(this.refreshTokenName) : null;\n\n    const refreshTokenTime = this.isUsingRefreshToken &&\n    this.refreshTokenTimeName != null ?\n      localStorage.getItem(this.refreshTokenTimeName) : null;\n\n    return this.checkTokenExist(\n        authToken,\n        authTokenType,\n        authTokenTime,\n        stateCookie,\n        refreshToken,\n        refreshTokenTime);\n  }\n\n  /**\n   * Check if the Initial token is valid or not,\n   * Called Internally by `initialCookieToken_()` and `initialLSToken_()`\n   *\n   * If the tokens are valid,\n   * then it response TokenObject with auth Information\n   * Else it response TokenObject with all null\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param authTokenTime\n   * @param stateCookie\n   * @param refreshToken\n   * @param refreshTokenTime\n   *\n   * @returns AuthKitStateInterface\n   *\n   */\n  checkTokenExist(\n      authToken: string | null | undefined,\n      authTokenType: string | null | undefined,\n      authTokenTime: string | null | undefined,\n      stateCookie: string | null | undefined,\n      refreshToken: string | null | undefined,\n      refreshTokenTime: string | null | undefined):\n    AuthKitStateInterface {\n    if (!!authToken && !!authTokenType && !!authTokenTime && !!stateCookie) {\n      const expiresAt = new Date(authTokenTime);\n      try {\n        const authState = JSON.parse(stateCookie);\n        const obj = {\n          auth: {\n            token: authToken,\n            type: authTokenType,\n            expiresAt: expiresAt,\n          },\n          userState: authState,\n          isSignIn: true,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          refresh: undefined,\n        };\n        if (this.isUsingRefreshToken && !!refreshToken && !! refreshTokenTime) {\n          const refreshTokenExpiresAt = new Date(refreshTokenTime);\n          return {\n            ...obj,\n            refresh: {\n              token: refreshToken,\n              expiresAt: refreshTokenExpiresAt,\n            },\n          };\n        } else {\n          return {\n            ...obj,\n            refresh: null,\n          };\n        }\n      } catch (e) {\n        return {\n          auth: null,\n          refresh: null,\n          userState: null,\n          isUsingRefreshToken: this.isUsingRefreshToken,\n          isSignIn: false,\n        };\n      }\n    } else {\n      return {\n        auth: null,\n        refresh: null,\n        userState: null,\n        isUsingRefreshToken: this.isUsingRefreshToken,\n        isSignIn: false,\n      };\n    }\n  }\n\n  /**\n   * Sync Auth Tokens on time of login and logout\n   *\n   * Set the New Cookies or new Localstorage on login\n   * Or Remove the old Cookies or old Localstorage on logout\n   *\n   * @param authState\n   */\n  syncTokens(authState: AuthKitStateInterface): void {\n    if (authState.auth) {\n      if (this.isUsingRefreshToken && authState.refresh) {\n        this.setToken(\n            authState.auth.token,\n            authState.auth.type,\n            authState.refresh.token,\n            authState.refresh.expiresAt,\n            authState.auth.expiresAt,\n            authState.userState,\n        );\n      } else {\n        this.setToken(\n            authState.auth.token,\n            authState.auth.type,\n            null,\n            null,\n            authState.auth.expiresAt,\n            authState.userState,\n        );\n      }\n    } else {\n      this.removeToken();\n    }\n  }\n\n  /**\n   * Set Cookies or localstorage on login\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param refreshToken\n   * @param refreshTokenExpiresAt\n   * @param expiresAt\n   * @param authState\n   */\n  setToken(\n      authToken: string,\n      authTokenType: string,\n      refreshToken: string | null,\n      refreshTokenExpiresAt: Date | null,\n      expiresAt: Date,\n      authState: AuthStateUserObject|null): void {\n    if (this.authStorageType === 'cookie') {\n      this.setCookieToken_(\n          authToken,\n          authTokenType,\n          refreshToken,\n          expiresAt,\n          refreshTokenExpiresAt,\n          authState);\n    } else {\n      this.setLSToken_(\n          authToken,\n          authTokenType,\n          refreshToken,\n          expiresAt,\n          refreshTokenExpiresAt,\n          authState);\n    }\n  }\n\n  /**\n   *\n   * Set Cookie on time of Login\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param refreshToken\n   * @param expiresAt\n   * @param refreshTokenExpiresAt\n   * @param authState\n   */\n  setCookieToken_(\n      authToken: string,\n      authTokenType: string,\n      refreshToken: string | null,\n      expiresAt: Date,\n      refreshTokenExpiresAt: Date | null,\n      authState: AuthStateUserObject|null): void {\n    Cookies.set(this.authStorageName, authToken, {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.set(this.authStorageTypeName, authTokenType, {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.set(this.authTimeStorageName, expiresAt.toISOString(), {\n      expires: expiresAt,\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    if (authState) {\n      Cookies.set(this.stateStorageName, JSON.stringify(authState), {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n\n    if (this.isUsingRefreshToken && !!this.refreshTokenName &&\n      !!refreshToken) {\n      Cookies.set(this.refreshTokenName, refreshToken, {\n        expires: expiresAt,\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName &&\n      !!refreshTokenExpiresAt) {\n      Cookies.set(this.refreshTokenTimeName,\n          refreshTokenExpiresAt.toISOString(), {\n            expires: expiresAt,\n            domain: this.cookieDomain,\n            secure: this.cookieSecure,\n          });\n    }\n  }\n\n  /**\n   * Set LocalStorage at the time of Login\n   *\n   * @param authToken\n   * @param authTokenType\n   * @param refreshToken\n   * @param expiresAt\n   * @param refreshTokenExpiresAt\n   * @param authState\n   */\n  setLSToken_(\n      authToken: string,\n      authTokenType: string,\n      refreshToken: string | null,\n      expiresAt: Date,\n      refreshTokenExpiresAt: Date | null,\n      authState: AuthStateUserObject|null): void {\n    localStorage.setItem(this.authStorageName, authToken);\n    localStorage.setItem(this.authStorageTypeName, authTokenType);\n    localStorage.setItem(this.authTimeStorageName, expiresAt.toISOString());\n    if (authState) {\n      localStorage.setItem(this.stateStorageName, JSON.stringify(authState));\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenName &&\n      !!refreshToken) {\n      localStorage.setItem(this.refreshTokenName, refreshToken);\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName &&\n      !!refreshTokenExpiresAt) {\n      localStorage.setItem(this.refreshTokenTimeName,\n          refreshTokenExpiresAt.toISOString());\n    }\n  }\n\n  /**\n   * Remove Tokens on time of Logout\n   */\n  removeToken(): void {\n    if (this.authStorageType === 'cookie') {\n      this.removeCookieToken_();\n    } else {\n      this.removeLSToken_();\n    }\n  }\n\n  /**\n   * Remove Token from Cookies\n   */\n  removeCookieToken_(): void {\n    Cookies.remove(this.authStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.remove(this.authTimeStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.remove(this.authStorageTypeName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    Cookies.remove(this.stateStorageName, {\n      domain: this.cookieDomain,\n      secure: this.cookieSecure,\n    });\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      Cookies.remove(this.refreshTokenName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName) {\n      Cookies.remove(this.refreshTokenTimeName, {\n        domain: this.cookieDomain,\n        secure: this.cookieSecure,\n      });\n    }\n  }\n\n  /**\n   * Remove Token from LocalStorage\n   */\n  removeLSToken_(): void {\n    localStorage.removeItem(this.authStorageName);\n    localStorage.removeItem(this.authTimeStorageName);\n    localStorage.removeItem(this.authStorageTypeName);\n    localStorage.removeItem(this.stateStorageName);\n    if (this.isUsingRefreshToken && !!this.refreshTokenName) {\n      localStorage.removeItem(this.refreshTokenName);\n    }\n    if (this.isUsingRefreshToken && !!this.refreshTokenTimeName) {\n      localStorage.removeItem(this.refreshTokenTimeName);\n    }\n  }\n}\n\nexport default TokenObject;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Actions for useReducer\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AuthStateUserObject} from '../types';\n\nexport enum ActionType {\n  SignIn,\n  SignOut,\n  RefreshToken\n}\n\nexport interface SignInActionPayload {\n  auth: {\n    token: string,\n    type: string,\n    expiresAt: Date\n  },\n  refresh: {\n    token: string,\n    expiresAt: Date\n  } | null,\n  userState: AuthStateUserObject | null,\n}\n\nexport interface RefreshTokenActionPayload {\n  newAuthToken: string | null,\n  newAuthTokenExpireIn?: number | null,\n  newRefreshToken?: string | null,\n  newRefreshTokenExpiresIn?: number | null,\n  newAuthUserState?: AuthStateUserObject | null\n}\n\nexport interface SignInAction {\n  type: ActionType.SignIn,\n  payload: SignInActionPayload\n}\n\nexport interface RefreshTokenAction {\n  type: ActionType.RefreshToken,\n  payload: RefreshTokenActionPayload\n}\n\nexport interface SignOutAction {\n  type: ActionType.SignOut;\n}\n\nexport type AuthActions = SignInAction | SignOutAction | RefreshTokenAction\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Reducers for useReducer\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {AuthKitStateInterface} from '../types';\nimport {\n  ActionType,\n  AuthActions,\n  SignInAction,\n  SignInActionPayload,\n  SignOutAction,\n  RefreshTokenAction,\n  RefreshTokenActionPayload,\n} from './actions';\n\n/**\n * Auth Reducer\n * Used in auth state\n * @param state\n * @param action\n */\nexport function authReducer(state: AuthKitStateInterface,\n    action: AuthActions)\n  : AuthKitStateInterface {\n  switch (action.type) {\n    case ActionType.SignIn:\n      return {\n        ...state,\n        auth: action.payload.auth,\n        refresh: action.payload.refresh,\n        userState: action.payload.userState,\n        isSignIn: true,\n      };\n    case ActionType.SignOut:\n      return {\n        ...state,\n        auth: null,\n        refresh: null,\n        userState: null,\n        isSignIn: false,\n      };\n    case ActionType.RefreshToken:\n      if (state.isSignIn && state.auth && state.refresh) {\n        return {\n          ...state,\n          auth: {\n            token: action.payload.newAuthToken ?\n              action.payload.newAuthToken : state.auth.token,\n            type: state.auth.type,\n            expiresAt: action.payload.newAuthTokenExpireIn ?\n              new Date(new Date().getTime() +\n                action.payload.newAuthTokenExpireIn * 60 * 1000) :\n              state.auth.expiresAt,\n          },\n          refresh: {\n            token: action.payload.newRefreshToken ?\n              action.payload.newRefreshToken : state.refresh.token,\n            expiresAt: action.payload.newRefreshTokenExpiresIn ?\n              new Date(new Date().getTime() +\n                action.payload.newRefreshTokenExpiresIn * 60 * 1000) :\n              state.refresh.expiresAt,\n          },\n          userState: action.payload.newAuthUserState ?\n            action.payload.newAuthUserState : state.userState,\n        };\n      } else {\n        return state;\n      }\n  }\n}\n\n// Helper functions\n/**\n * used to make sign in\n * @param signInParams\n */\nexport function doSignIn(signInParams: SignInActionPayload): SignInAction {\n  return ({\n    type: ActionType.SignIn,\n    payload: signInParams,\n  });\n}\n\n/**\n * used to refresh the Token\n * @param refreshTokenParam\n */\nexport function doRefresh(refreshTokenParam: RefreshTokenActionPayload):\n  RefreshTokenAction {\n  return ({\n    type: ActionType.RefreshToken,\n    payload: refreshTokenParam,\n  });\n}\n\n/**\n * Used to make sign out\n */\nexport function doSignOut(): SignOutAction {\n  return ({\n    type: ActionType.SignOut,\n  });\n}\n","/*\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\n/**\n * React useInterval Hook\n * Used to integrate the power of setInterval seamlessly\n *\n * @param callback - The callback function\n * @param delay - The amount of delay in minutes.\n *\n * @returns the ref of setInterval\n */\nfunction useInterval(callback: ()=>void, delay:number|null)\n  : React.MutableRefObject<number | null> {\n  const savedCallback = React.useRef(callback);\n  const intervalRef = React.useRef<number | null>(null);\n\n  // Remember the latest callback if it changes.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    const tick = () => savedCallback.current();\n\n    if (typeof delay === 'number') {\n      intervalRef.current = window.setInterval(tick, delay * 60 * 1000);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        window.clearTimeout(intervalRef.current);\n      }\n    };\n  }, [delay]);\n\n  return intervalRef;\n}\n\nexport {useInterval};\n","import * as React from 'react';\nimport AuthContext from './AuthContext';\nimport TokenObject from './TokenObject';\nimport {AuthProviderProps} from './types';\nimport {authReducer, doRefresh} from './utils/reducers';\nimport {useInterval} from './utils/hooks';\n\n\n/**\n * AuthProvider - The Authentication Context Provider\n *\n * @param children\n * @param authStorageName\n * @param cookieDomain\n * @param cookieSecure\n *\n * @return Functional Component\n */\nconst AuthProvider: React.FunctionComponent<AuthProviderProps> =\n  ({\n    children,\n    authType,\n    authName,\n    cookieDomain,\n    cookieSecure,\n    refresh,\n  }) => {\n    if (authType === 'cookie') {\n      if (!cookieDomain) {\n        throw new\n        Error('authType \\'cookie\\' ' +\n          'requires \\'cookieDomain\\' and \\'cookieSecure\\' ' +\n          'props in AuthProvider');\n      }\n    }\n\n    const refreshTokenName = refresh ? `${authName}_refresh` : null;\n\n    const tokenObject = new TokenObject(authName, authType,\n        refreshTokenName, cookieDomain, cookieSecure);\n\n    const [authState, dispatch] =\n      React.useReducer(authReducer, tokenObject.initialToken());\n\n    if (refresh) {\n      useInterval(\n          () => {\n            refresh\n              .refreshApiCallback({\n                authToken: authState.auth?.token,\n                authTokenExpireAt: authState.auth?.expiresAt,\n                authUserState: authState.userState,\n                refreshToken: authState.refresh?.token,\n                refreshTokenExpiresAt: authState.refresh?.expiresAt,\n              })\n              .then((result) => {\n                // IF the API call is successful then refresh the AUTH state\n                if (result.isSuccess) {\n                  // store the new value using the state update\n                  dispatch(doRefresh(result));\n                }\n              });\n          },\n        authState.isSignIn ? refresh.interval : null,\n      );\n    }\n\n    React.useEffect(() => {\n      tokenObject.syncTokens(authState);\n    }, [authState]);\n\n    return (\n      <AuthContext.Provider value={{authState, dispatch}}>\n        {children}\n      </AuthContext.Provider>\n    );\n  };\n\nexport default AuthProvider;\n","/*\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {createRefreshParamInterface} from './types';\n\n/**\n * This function doesn't really \"do anything\" at runtime,\n * it's just help to organize the code base\n * Use this function to create the refresh token system\n */\nfunction createRefresh(param: createRefreshParamInterface)\n  :createRefreshParamInterface {\n  return param;\n}\n\nexport default createRefresh;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview PrivateRoute component\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {useLocation, Navigate} from 'react-router-dom';\nimport AuthContext from './AuthContext';\nimport {doSignOut} from './utils/reducers';\n\ninterface RequireAuthProps {\n  children: JSX.Element,\n  loginPath: string\n}\n\nconst RequireAuth: React.FunctionComponent<RequireAuthProps> =\n  ({children, loginPath}) => {\n    const context = React.useContext(AuthContext);\n    if (context === null) {\n      throw new\n      Error('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n    }\n\n    const isAuth = () => {\n      if (context.authState.auth &&\n      (new Date(context.authState.auth.expiresAt) > new Date())) {\n        return true;\n      } else {\n        context.dispatch(doSignOut());\n        return false;\n      }\n    };\n    const location = useLocation();\n\n    if (!isAuth()) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n      return <Navigate to={loginPath} state={{from: location}} replace />;\n    }\n\n    return children;\n  };\n\n/**\n * Private Route for Components\n *\n * @remarks\n * This Component is based on {@link https://reactrouter.com/web/api/Route | reactrouter.Route}.\n * So you need to install react-route-dom before use it\n *\n * @param props\n */\n\nexport default RequireAuth;\n","/**\n *@author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n *@fileoverview Sign In functionality <hook>\n *@copyright Arkadip Bhattacharya 2020\n *@license Apache-2.0\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {signInFunctionParams} from '../types';\nimport {doSignIn} from '../utils/reducers';\n\n/**\n *@function\n *@name useSignIn\n *@description Authentication SignIn Hook\n *@returns - Sign In function\n */\nfunction useSignIn(): (signInConfig: signInFunctionParams) => boolean {\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    Error('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n  return (signInConfig: signInFunctionParams): boolean => {\n    const {\n      token,\n      tokenType,\n      authState,\n      expiresIn,\n      refreshToken,\n      refreshTokenExpireIn,\n    } = signInConfig;\n    const expTime = new Date(new Date().getTime() + expiresIn * 60 * 1000);\n    if (context.authState.isUsingRefreshToken) {\n      // Using the power of refresh token\n      if (!!refreshToken && !!refreshTokenExpireIn) {\n        // refresh token params are provided\n        // sign in with refresh token\n        const refreshTokenExpireAt =\n          new Date(new Date().getTime() + refreshTokenExpireIn * 60 * 1000);\n        context.dispatch(doSignIn({\n          auth: {\n            token: token,\n            type: tokenType,\n            expiresAt: expTime,\n          },\n          userState: authState ? authState : null,\n          refresh: {\n            token: refreshToken,\n            expiresAt: refreshTokenExpireAt,\n          },\n        }));\n        return true;\n      } else {\n        // refresh token params are not provided\n        // throw an error\n        throw new Error('Make sure you given \"refreshToken\" and  ' +\n          '\"refreshTokenExpireIn\" parameter');\n      }\n    } else {\n      // Not using refresh token\n      if (!!refreshToken && !!refreshTokenExpireIn) {\n        // params are not expected but provided\n        // throw an error\n        throw new Error('The app doesn\\'t implement \\'refreshToken\\' ' +\n          'feature.\\nSo you have to implement refresh token feature ' +\n          'from \\'AuthProvider\\' before using it.');\n      } else {\n        // sign in without the refresh token\n        context.dispatch(doSignIn({\n          auth: {\n            token: token,\n            type: tokenType,\n            expiresAt: expTime,\n          },\n          userState: authState ? authState : null,\n          refresh: null,\n        }));\n        return true;\n      }\n    }\n  };\n}\n\n/**\n *@exports useSignIn\n */\nexport default useSignIn;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Sign Out functionality <Hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {doSignOut} from '../utils/reducers';\n\n/**\n  *@public\n  *@function\n  *@name useSignOut\n  *@description Sign out Hook\n  */\nfunction useSignOut(): () => (boolean) {\n  /**\n   *A constant c.\n   *@kind constant\n   */\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    Error('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n\n  return () => {\n    try {\n      if (context) {\n        context.dispatch(doSignOut());\n        return true;\n      } else {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n  };\n}\n/**\n  *@exports useSignOut\n  */\nexport default useSignOut;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication User <hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {AuthStateUserObject} from '../types';\n\n/**\n * Auth State Hook\n *\n * @returns - Auth State Function\n */\nfunction useAuthUser(): () => AuthStateUserObject | null {\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    Error('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n  return () => {\n    return context.authState.auth ?\n      context.authState.userState : null;\n  };\n}\n\nexport default useAuthUser;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication header <hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\n\n/**\n *\n */\nfunction useAuthHeader(): () => (string) {\n  const c = React.useContext(AuthContext);\n  if (c === null) {\n    throw new\n    Error('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n\n\n  return () => {\n    if (c.authState.auth) {\n      return `${c.authState.auth.type} ${c.authState.auth.token}`;\n    } else {\n      return ``;\n    }\n  };\n}\n\nexport default useAuthHeader;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication status <hook>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport AuthContext from '../AuthContext';\nimport {doSignOut} from '../utils/reducers';\n\n/**\n  *@function\n  *@name useIsAuthenticated\n  *@description check weather user is authenticated or not\n  */\nfunction useIsAuthenticated(): ()=>boolean {\n  const context = React.useContext(AuthContext);\n  if (context === null) {\n    throw new\n    Error('Auth Provider is missing. ' +\n      'Please add the AuthProvider before Router');\n  }\n  return () => {\n    if (context.authState.auth) {\n      if (new Date(context.authState.auth.expiresAt) > new Date()) {\n        return true;\n      } else {\n        context.dispatch(doSignOut());\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n/**\n  *@exports useIsAuthenticated\n  */\nexport default useIsAuthenticated;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Sign In functionality <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {signInFunctionParams} from '../types';\nimport {doSignIn} from '../utils/reducers';\n\n/**\n * @interface withSignInProps\n */\ninterface withSignInProps {\n    signIn(params: signInFunctionParams): boolean\n}\n\n/**\n * @public\n * @function\n * @name withSignIn\n * @description Inject sign in functionality inside the Component's Prop\n * @param Component\n */\nfunction withSignIn<P extends withSignInProps>(\n    Component: React.ComponentType<P>,\n):React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            Error('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          const signIn = (signInConfig: signInFunctionParams)\n            : boolean => {\n            const {\n              token,\n              tokenType,\n              authState,\n              expiresIn,\n              refreshToken,\n              refreshTokenExpireIn,\n            } = signInConfig;\n            const expTime =\n              new Date(new Date().getTime() + expiresIn * 60 * 1000);\n            if (c.authState.isUsingRefreshToken) {\n              // Using the power of refresh token\n              if (!!refreshToken && !!refreshTokenExpireIn) {\n                // refresh token params are provided\n                // sign in with refresh token\n                const refreshTokenExpireAt = new Date(new Date().getTime() +\n                  refreshTokenExpireIn * 60 * 1000);\n                c.dispatch(doSignIn({\n                  auth: {\n                    token: token,\n                    type: tokenType,\n                    expiresAt: expTime,\n                  },\n                  userState: authState ? authState : null,\n                  refresh: {\n                    token: refreshToken,\n                    expiresAt: refreshTokenExpireAt,\n                  },\n                }));\n                return true;\n              } else {\n                // refresh token params are not provided\n                // throw an error\n                throw new Error('Make sure you given \"refreshToken\" and  ' +\n                  '\"refreshTokenExpireIn\" parameter');\n              }\n            } else {\n              // Not using refresh token\n              if (!!refreshToken && !!refreshTokenExpireIn) {\n                // params are not expected but provided\n                // throw an error\n                throw new Error('The app doesn\\'t implement \\'refreshToken\\'' +\n                  ' feature.\\n So you have to implement refresh token feature' +\n                  ' from \\'AuthProvider\\' before using it.');\n              } else {\n                // sign in without the refresh token\n                c.dispatch(doSignIn({\n                  auth: {\n                    token: token,\n                    type: tokenType,\n                    expiresAt: expTime,\n                  },\n                  userState: authState ? authState : null,\n                  refresh: null,\n                }));\n                return true;\n              }\n            }\n          };\n          return <Component {...props} signIn={signIn}/>;\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withSignIn;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Sign Out functionality <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {doSignOut} from '../utils/reducers';\n\n/**\n * @interface withSignOutProps\n */\ninterface withSignOutProps {\n    signOut(): boolean\n}\n\n/**\n * @public\n * @function\n * @name withSignOut\n * @description Inject sign Out functionality inside the Component's Prop\n * @param Component\n */\nfunction withSignOut<P extends withSignOutProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            Error('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          const signOut = () => {\n            try {\n              if (c) {\n                c.dispatch(doSignOut());\n                return true;\n              } else {\n                return false;\n              }\n            } catch (e) {\n              return false;\n            }\n          };\n          return <Component {...props} signOut={signOut}/>;\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withSignOut;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication User <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {AuthStateUserObject} from '../types';\n\n/**\n * @interface withAuthProps\n */\ninterface withAuthProps {\n    authState: AuthStateUserObject| null\n}\n\n/**\n * @function\n * @name withAuthUser\n * @description Inject Authenticated User's state inside the Component's Prop\n * @param Component\n */\nfunction withAuthUser<P extends withAuthProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props: P)=>{\n    return (\n      <AuthContextConsumer>\n        {(context) => {\n          if (context === null) {\n            throw new\n            Error('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (context.authState.auth) {\n            return (\n              <Component {...props} authState={context.authState.userState}/>\n            );\n          } else {\n            return (\n              <Component {...props} authState={null}/>\n            );\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n/**\n * @exports withAuthUser\n */\nexport default withAuthUser;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication header <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\n\n/**\n * @interface withAuthHeaderProps\n */\ninterface withAuthHeaderProps {\n    authHeader: string\n}\n\n/**\n * @public\n * @function\n * @name withAuthHeader\n * @description Inject Authentication Header inside the Component's Prop\n * @param Component - React Component\n */\nfunction withAuthHeader<P extends withAuthHeaderProps>(\n    Component: React.ComponentType<P>,\n):React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            Error('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (c.authState.auth) {\n            return (\n              <Component\n                {...props}\n                authHeader={\n                  `${c.authState.auth.type} ${c.authState.auth.token}`\n                }\n              />\n            );\n          } else {\n            return <Component {...props} authHeader={``}/>;\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n/**\n  *@exports withAuthHeader\n  */\nexport default withAuthHeader;\n","/**\n * @author Arkadip Bhattacharya <in2arkadipb13@gmail.com>\n * @fileoverview Authentication status <Higher Order Component>\n * @copyright Arkadip Bhattacharya 2020\n *\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport {AuthContextConsumer} from '../AuthContext';\nimport {doSignOut} from '../utils/reducers';\n\n/**\n * @interface withAuthHeaderProps\n */\ninterface withAuthHeaderProps {\n    isAuth: string\n}\n\n/**\n * @public\n * @function\n * @name withIsAuthenticated\n * @description Inject Authentication status inside the Component's Prop\n * @param Component\n */\nfunction withIsAuthenticated<P extends withAuthHeaderProps>(\n    Component: React.ComponentType<P>,\n): React.FunctionComponent<P> {\n  return (props) => {\n    return (\n      <AuthContextConsumer>\n        {(c) => {\n          if (c === null) {\n            throw new\n            Error('Auth Provider is missing. ' +\n              'Please add the AuthProvider before Router');\n          }\n          if (c.authState.auth) {\n            if (new Date(c.authState.auth.expiresAt) > new Date()) {\n              return <Component {...props} isAuth={true}/>;\n            } else {\n              c.dispatch(doSignOut());\n              return <Component {...props} isAuth={false}/>;\n            }\n          } else {\n            return <Component {...props} isAuth={false}/>;\n          }\n        }}\n      </AuthContextConsumer>\n    );\n  };\n}\n\nexport default withIsAuthenticated;\n","/*\n * Copyright 2020 Arkadip Bhattacharya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * last updated 25th August 2021\n */\n\nimport AuthProvider from './AuthProvider';\nimport createRefresh from './createRefresh';\nimport RequireAuth from './PrivateRoute';\nimport useSignIn from './hooks/useSignIn';\nimport useSignOut from './hooks/useSignOut';\nimport useAuthUser from './hooks/useAuthUser';\nimport useAuthHeader from './hooks/useAuthHeader';\nimport useIsAuthenticated from './hooks/useIsAuthenticated';\nimport withSignIn from './higherOrderComponents/withSignIn';\nimport withSignOut from './higherOrderComponents/withSignOut';\nimport withAuthUser from './higherOrderComponents/withAuthUser';\nimport withAuthHeader from './higherOrderComponents/withAuthHeader';\nimport withIsAuthenticated from './higherOrderComponents/withIsAuthenticated';\n\n// Default prop for AuthProvider\nAuthProvider.defaultProps = {\n  cookieDomain: window.location.hostname,\n  cookieSecure: window.location.protocol === 'https:',\n};\n\nexport {\n  AuthProvider,\n  RequireAuth,\n  createRefresh,\n  useSignIn,\n  useSignOut,\n  useAuthUser,\n  useAuthHeader,\n  useIsAuthenticated,\n  withSignIn,\n  withSignOut,\n  withAuthUser,\n  withAuthHeader,\n  withIsAuthenticated,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}