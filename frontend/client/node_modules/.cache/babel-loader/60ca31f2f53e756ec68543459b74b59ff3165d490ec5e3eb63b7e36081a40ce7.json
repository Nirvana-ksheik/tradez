{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamel.yehya\\\\Desktop\\\\TradeZ\\\\frontend\\\\client\\\\src\\\\pages\\\\EditItem\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport ItemForm from \"components/ItemForm\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditItem = _ref => {\n  _s();\n  let {\n    getCookie\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  useEffect(() => {\n    getItemDetails();\n  }, []);\n  const getItemDetails = async () => {\n    const token = getCookie();\n    let reqInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const url = \"http://localhost:3000/api/item/\" + id;\n    await reqInstance.get(url, {\n      withCredentials: true,\n      baseURL: 'http://localhost:3000'\n    }).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      console.log(\"data: \", data);\n      setData(data);\n      const dataTransfer = new DataTransfer();\n      data.imagePaths.forEach(async (item, i) => {\n        const base64String = await getImg(item);\n        const buffer = Buffer.from(base64String, \"base64\");\n        const blob = new Blob([buffer], {\n          type: '[content-type]'\n        });\n        console.log(\"base64String: \", base64String);\n        // const bytes = base64ToArrayBuffer(base64String);\n        const img = new File(blob, \"fileName\");\n        dataTransfer.items.add(img);\n      });\n      const files = dataTransfer.files;\n      setSelectedFile(files);\n    });\n  };\n  const getImg = async imageUrl => {\n    const token = getCookie();\n    let res = undefined;\n    let reqInstance = axios.create({\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const url = \"http://localhost:3000/api\" + imageUrl;\n    await reqInstance.get(url, {\n      withCredentials: true,\n      baseURL: 'http://localhost:3000'\n    }).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      res = data;\n    });\n    return res;\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", data.name);\n    formData.append(\"approximateValue\", data.approximateValue);\n    formData.append(\"locationName\", data.locationName);\n    formData.append(\"description\", data.description);\n    for (let i = 0; i < selectedFile.length; i++) {\n      formData.append('imagesReferences', selectedFile[i]);\n    }\n    const token = getCookie();\n    let reqInstance = axios.create({\n      headers: {\n        'ContentType': 'multipart/form-data',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    try {\n      const url = \"http://localhost:3000/api/item/edit/\" + id;\n      await reqInstance.put(url, formData, {\n        withCredentials: true,\n        baseURL: 'http://localhost:3000'\n      });\n      navigate(\"/items/mine\");\n    } catch (error) {\n      console.log(\"error: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && selectedFile && /*#__PURE__*/_jsxDEV(ItemForm, {\n      data: data,\n      setData: setData,\n      selectedFile: selectedFile,\n      setSelectedFile: setSelectedFile,\n      submitForm: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(EditItem, \"hjPVCEBHpzdQ8sRRDtrl8zUX8hc=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditItem;\nexport default EditItem;\nvar _c;\n$RefreshReg$(_c, \"EditItem\");","map":{"version":3,"names":["ItemForm","useState","useEffect","axios","useNavigate","useParams","EditItem","getCookie","navigate","id","data","setData","selectedFile","setSelectedFile","getItemDetails","token","reqInstance","create","headers","Authorization","url","get","withCredentials","baseURL","then","console","log","dataTransfer","DataTransfer","imagePaths","forEach","item","i","base64String","getImg","buffer","Buffer","from","blob","Blob","type","img","File","items","add","files","imageUrl","res","undefined","submitForm","e","preventDefault","formData","FormData","append","name","approximateValue","locationName","description","length","put","error"],"sources":["C:/Users/kamel.yehya/Desktop/TradeZ/frontend/client/src/pages/EditItem/index.jsx"],"sourcesContent":["import ItemForm from \"components/ItemForm\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EditItem = ({ getCookie }) => {\r\n\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [selectedFile, setSelectedFile] = useState(\"\");\r\n\r\n    useEffect(() => {   \r\n        getItemDetails();\r\n    }, []);\r\n\r\n    const getItemDetails = async () => {\r\n\r\n        const token = getCookie();\r\n\r\n        let reqInstance = axios.create({\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        const url = \"http://localhost:3000/api/item/\" + id;\r\n        await reqInstance.get(\r\n            url,\r\n            {\r\n                withCredentials: true,\r\n                baseURL: 'http://localhost:3000',\r\n                \r\n            }\r\n        ).then(({data}) => {\r\n            console.log(\"data: \", data);\r\n            setData(data);\r\n\r\n            const dataTransfer = new DataTransfer();\r\n\r\n            data.imagePaths.forEach(async (item, i) => {\r\n                const base64String = await getImg(item);\r\n                const buffer = Buffer.from(base64String, \"base64\");\r\n                const blob = new Blob([buffer], { type: '[content-type]' })\r\n                console.log(\"base64String: \", base64String);\r\n                // const bytes = base64ToArrayBuffer(base64String);\r\n                const img = new File(blob, \"fileName\");\r\n                dataTransfer.items.add(img);\r\n            });\r\n    \r\n            const files = dataTransfer.files;\r\n    \r\n            setSelectedFile(files);\r\n        });\r\n    };\r\n\r\n    const getImg = async (imageUrl) => {\r\n\r\n        const token = getCookie();\r\n        let res = undefined;\r\n\r\n        let reqInstance = axios.create({\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        const url = \"http://localhost:3000/api\" + imageUrl;\r\n        await reqInstance.get(\r\n            url,\r\n            {\r\n                withCredentials: true,\r\n                baseURL: 'http://localhost:3000'\r\n            }\r\n        ).then(({data}) => {\r\n            res = data;\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"name\",  data.name);\r\n        formData.append(\"approximateValue\",  data.approximateValue);\r\n        formData.append(\"locationName\",  data.locationName);\r\n        formData.append(\"description\",  data.description);\r\n\r\n        for (let i = 0; i < selectedFile.length; i++) {\r\n            formData.append('imagesReferences', selectedFile[i]);\r\n        }\r\n\r\n        const token = getCookie();\r\n\r\n        let reqInstance = axios.create({\r\n            headers: {\r\n                'ContentType': 'multipart/form-data',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n\t\ttry {\r\n\t\t\tconst url = \"http://localhost:3000/api/item/edit/\" + id;\r\n\t\t\tawait reqInstance.put(url, formData, \r\n\t\t\t\t{\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\tbaseURL: 'http://localhost:3000'\r\n\t\t\t\t});\r\n\r\n\t\t\tnavigate(\"/items/mine\");\r\n\r\n\t\t} catch (error) { \r\n\t\t\tconsole.log(\"error: \", error);\r\n\t\t}\r\n    }    \r\n\r\n\treturn (\r\n        <>\r\n            {   \r\n                data && selectedFile &&\r\n                <ItemForm data={data} setData={setData} selectedFile={selectedFile} setSelectedFile={setSelectedFile} submitForm={submitForm} />\r\n            }\r\n        </>\r\n\t);\r\n};\r\n\r\nexport default EditItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}