{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamel.yehya\\\\Desktop\\\\TradeZ\\\\frontend\\\\client\\\\src\\\\components\\\\ResetPassword\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const password = '';\n  const passwordConfirmation = '';\n  const [error, setError] = useState(null);\n\n  // const handleChange = ({ currentTarget: input }) => {\n  // \tconsole.log(\"input value: \", input.value);\n  // \tconst value = input.value;\n  // \tif(input.name == \"password\"){\n  // \t\tsetPassword(value);\n  // \t}else{\n  // \t\tsetPasswordConfirmation(value);\n  // \t}\n  // \t// setData({ ...data, [input.name]: input.value });\n  // \tconsole.log(\"password: \", password);\n  // \tconsole.log(\"confirmation: \", passwordConfirmation);\n\n  // \tif(password !== passwordConfirmation){\n  // \t\tsetError(\"Passwords Don't match\");\n  // \t}else{\n  // \t\tsetError(undefined);\n  // \t}\n  // };\n\n  const resetPassword = e => {\n    e.preventDefault();\n    if (password != passwordConfirmation) {\n      setError(\"Passwords Don't match\");\n    }\n  };\n\n  // useEffect(() => {\n  //     resetPassword();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.login_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.login_form_container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.left,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: styles.form_container,\n            onSubmit: resetPassword,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Enter your new Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"New Password\",\n              id: \"password\",\n              onChange: () => {\n                let val = document.getElementById(\"password\").value;\n                console.log(\"val: \", val);\n                password = val;\n                console.log(\"password: \", password);\n              },\n              required: true,\n              className: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              id: \"passwordConfirmation\",\n              onChange: () => {\n                let val = document.getElementById(\"passwordConfirmation\").value;\n                passwordConfirmation = val;\n                console.log(\"passwordConfirmation: \", passwordConfirmation);\n              },\n              required: true,\n              className: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 7\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.error_msg,\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: styles.green_btn,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(ResetPassword, \"A8i/78Fx3FIozbyR2zwnz0NK35o=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","styles","ResetPassword","password","passwordConfirmation","error","setError","resetPassword","e","preventDefault","login_container","login_form_container","left","form_container","val","document","getElementById","value","console","log","input","error_msg","green_btn"],"sources":["C:/Users/kamel.yehya/Desktop/TradeZ/frontend/client/src/components/ResetPassword/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nfunction ResetPassword() {\r\n\r\n\tconst password = '';\r\n\tconst passwordConfirmation = '';\r\n\r\n\tconst [error, setError] = useState(null);\r\n\r\n\t// const handleChange = ({ currentTarget: input }) => {\r\n\t// \tconsole.log(\"input value: \", input.value);\r\n\t// \tconst value = input.value;\r\n\t// \tif(input.name == \"password\"){\r\n\t// \t\tsetPassword(value);\r\n\t// \t}else{\r\n\t// \t\tsetPasswordConfirmation(value);\r\n\t// \t}\r\n\t// \t// setData({ ...data, [input.name]: input.value });\r\n\t// \tconsole.log(\"password: \", password);\r\n\t// \tconsole.log(\"confirmation: \", passwordConfirmation);\r\n\r\n\t// \tif(password !== passwordConfirmation){\r\n\t// \t\tsetError(\"Passwords Don't match\");\r\n\t// \t}else{\r\n\t// \t\tsetError(undefined);\r\n\t// \t}\r\n\t// };\r\n\r\n\tconst resetPassword = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(password != passwordConfirmation){\r\n\t\t\tsetError(\"Passwords Don't match\");\r\n\t\t}\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     resetPassword();\r\n    // }, []);\r\n\r\n    return(\r\n        <>\r\n        <div className={styles.login_container}>\r\n\t\t\t<div className={styles.login_form_container}>\r\n\t\t\t\t<div className={styles.left}>\r\n\t\t\t\t\t<form className={styles.form_container} onSubmit={resetPassword}>\r\n\t\t\t\t\t\t<h1>Enter your new Password</h1>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\tonChange={()=>{\r\n\t\t\t\t\t\t\t\tlet val = document.getElementById(\"password\").value;\r\n\t\t\t\t\t\t\t\tconsole.log(\"val: \", val);\r\n\t\t\t\t\t\t\t\tpassword = val;\r\n\t\t\t\t\t\t\t\tconsole.log(\"password: \", password);\r\n\t\t\t\t\t\t\t}}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\tid=\"passwordConfirmation\"\r\n\t\t\t\t\t\t\tonChange={()=>{\r\n\t\t\t\t\t\t\t\tlet val = document.getElementById(\"passwordConfirmation\").value;\r\n\t\t\t\t\t\t\t\tpasswordConfirmation = val;\r\n\t\t\t\t\t\t\t\tconsole.log(\"passwordConfirmation: \", passwordConfirmation);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{error && <div className={styles.error_msg}>{error}</div>}\r\n\t\t\t\t\t\t<button type=\"submit\" className={styles.green_btn}>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAEzC,SAASC,aAAa,GAAG;EAAA;EAExB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,oBAAoB,GAAG,EAAE;EAE/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,aAAa,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGN,QAAQ,IAAIC,oBAAoB,EAAC;MACnCE,QAAQ,CAAC,uBAAuB,CAAC;IAClC;EACE,CAAC;;EAED;EACA;EACA;;EAEA,oBACI;IAAA,uBACA;MAAK,SAAS,EAAEL,MAAM,CAACS,eAAgB;MAAA,uBAC5C;QAAK,SAAS,EAAET,MAAM,CAACU,oBAAqB;QAAA,uBAC3C;UAAK,SAAS,EAAEV,MAAM,CAACW,IAAK;UAAA,uBAC3B;YAAM,SAAS,EAAEX,MAAM,CAACY,cAAe;YAAC,QAAQ,EAAEN,aAAc;YAAA,wBAC/D;cAAA,UAAI;YAAuB;cAAA;cAAA;cAAA;YAAA,QAAK,eAChC;cACC,IAAI,EAAC,UAAU;cACf,WAAW,EAAC,cAAc;cAC1B,EAAE,EAAC,UAAU;cACb,QAAQ,EAAE,MAAI;gBACb,IAAIO,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;gBACnDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,GAAG,CAAC;gBACzBX,QAAQ,GAAGW,GAAG;gBACdI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEhB,QAAQ,CAAC;cACpC,CAAE;cACF,QAAQ;cACR,SAAS,EAAEF,MAAM,CAACmB;YAAM;cAAA;cAAA;cAAA;YAAA,QACvB,eACF;cACC,IAAI,EAAC,UAAU;cACf,WAAW,EAAC,kBAAkB;cAC9B,EAAE,EAAC,sBAAsB;cACzB,QAAQ,EAAE,MAAI;gBACb,IAAIN,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,sBAAsB,CAAC,CAACC,KAAK;gBAC/Db,oBAAoB,GAAGU,GAAG;gBAC1BI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEf,oBAAoB,CAAC;cAC5D,CAAE;cACF,QAAQ;cACR,SAAS,EAAEH,MAAM,CAACmB;YAAM;cAAA;cAAA;cAAA;YAAA,QACvB,EACDf,KAAK,iBAAI;cAAK,SAAS,EAAEJ,MAAM,CAACoB,SAAU;cAAA,UAAEhB;YAAK;cAAA;cAAA;cAAA;YAAA,QAAO,eACzD;cAAQ,IAAI,EAAC,QAAQ;cAAC,SAAS,EAAEJ,MAAM,CAACqB,SAAU;cAAA,UAAC;YAEnD;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA;QACH;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACD,iBACG;AAEX;AAAC,GA/EQpB,aAAa;AAAA,KAAbA,aAAa;AAiFtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}